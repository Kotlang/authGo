name: Docker

on:
  push:
    # Publish `release` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: auth-service

jobs:
  build-service:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Install protoc
        run: sudo apt install -y protobuf-compiler

      - name: Install go-grpc
        run: |
          go get -u google.golang.org/protobuf/cmd/protoc-gen-go
          go install google.golang.org/protobuf/cmd/protoc-gen-go
          go get -u google.golang.org/grpc/cmd/protoc-gen-go-grpc
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc
          echo "${HOME}/go/bin" >> $GITHUB_PATH
          echo "Path is ${GITHUB_PATH}"
      - name: Build
        run: ./build.sh

      - name: Build docker image
        run: docker build -t kotlangauthsvc.azurecr.io/$IMAGE_NAME:${{ github.sha }} .

      - name: Log into registry
        uses: azure/docker-login@v1
        with:
          login-server: kotlangauthsvc.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Push image
        run: |
          docker push kotlangauthsvc.azurecr.io/$IMAGE_NAME:${{ github.sha }}

  deploy-service:
    needs: build-service
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set aks context
        uses: azure/aks-set-context@v1
        with:
          creds: "${{ secrets.AZURE_CREDENTIALS }}"
          cluster-name: KotlangCluster
          resource-group: kotlang

      - name: Set k8s secrets
        uses: azure/k8s-create-secret@v1
        with:
          namespace: "default"
          secret-type: "generic"
          arguments: --from-literal=mongoUri=${{ secrets.MONGO_URI }} --from-literal=accessSecret=${{ secrets.JWT_ACCESS_KEY }} --from-literal=awsAccessKeyId=${{ secrets.AWS_ACCESS_KEY }} --from-literal=awsSecretAccessKey=${{ secrets.AWS_ACCESS_SECRET }}
          secret-name: app-secrets

      - name: Set Twilio k8s secrets
        uses: azure/k8s-create-secret@v1
        with:
          namespace: "default"
          secret-type: "generic"
          arguments: --from-literal=accountSid=${{ secrets.TWILIO_ACCOUNT_SID }} --from-literal=authToken=${{ secrets.TWILIO_AUTH_TOKEN }}
          secret-name: twilio-secrets

      - name: Set k8s secrets to access ACR
        uses: azure/k8s-create-secret@v1
        with:
          container-registry-url: kotlangauthsvc.azurecr.io
          container-registry-username: ${{ secrets.ACR_USERNAME }}
          container-registry-password: ${{ secrets.ACR_PASSWORD }}
          secret-name: acr-secrets
          namespace: default
          force: true

      - name: AKS Deploy
        uses: azure/k8s-deploy@v1
        with:
          manifests: |
            kubernetes/deployment.yml
            kubernetes/service.yml
          images: |
            kotlangauthsvc.azurecr.io/auth-service:${{ github.sha }}
          imagepullsecrets: |
            acr-secrets
          namespace: default
